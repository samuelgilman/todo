{"lists":{"b06bd0aa-0278-48ec-8e16-558d765a4212":{"uuid":"b06bd0aa-0278-48ec-8e16-558d765a4212","updated":1428336302117,"title":"Backend","description":"By: Sam Gilman","items":[{"position":0,"title":"Bind to a port that is defined in an environment file excluded from source control","description":"I interpreted this as a <code>.rc</code> file and not a <code>Procfile</code>. The host and port are set from <code>HOST</code> and <code>PORT</code> respectively. If none are set they default to the standard <code>127.0.0.1:3000</code>.","checked":true},{"position":1,"title":"Use Express, Koa, another server framework, or use the native HTTP methods","description":"I built a simple framework that uses the http module which consists of a server that loads the router, controller, model, and db driver.","checked":true},{"position":2,"title":"Create a set of RESTful URL patterns to support creating, accessing/editing a list","description":"Standard REST routing. You can see it <a href=\"https://github.com/samuelgilman/todo/blob/master/app/controller.js\" target=\"_blank\">here</a> and the router <a href=\"https://github.com/samuelgilman/todo/blob/master/app/router.js\" target=\"_blank\">here</a>.\n<pre>\n  Post lists/ -> Create a new list\n  GET lists/ -> Gets all lists (with all items)\n  GET lists/:id -> Gets a single list (with all items)\n  PUT lists/:id -> Updates a single list (with al items)\n  DELETE lists/:id -> Updates a single list\n</pre>","checked":true},{"position":3,"title":"Display a 404 error for any invalid route","description":"There are several types of routes that have this problem.\n<ul>\n  <li>\n    <a href=\"http://localhost:3000/invalid\" target=\"_blank\">Unobtrusive bad route</a> \n    - Cannot be mapped.\n  </li>\n  <li>\n    <a href=\"http://localhost:3000/lists/invalid\" target=\"_blank\">Unobtrusive not found</a> \n    - Mapped by server but resource cannot be found.\n  </li>\n  <li>\n    <a href=\"http://localhost:3000/#invalid\" target=\"_blank\">Obtrusive bad route</a> \n    - Mapped by server but not client.\n  </li>\n  <li>\n    <a href=\"http://localhost:3000/#lists/invalid\" target=\"_blank\">Obtrusive not found</a> \n    - Mapped by server and client by resource cannot be found.\n  </li>\n</ul>\n<a href=\"http://localhost:3000/lists/invalid\" target=\"_blank\">Unobtrusive not found</a> returns JSON because the router expects this to be called with AJAX. Normally there would also be some sort of server side view/template to handle this but this wasn't a requirement. Likewise a list that can be found with the same route would return json.","checked":true},{"position":4,"title":"Use a template engine in conjunction with the server framework","description":"For the record I know about template engines, specifically server side template engines because the app has client side templates too. I decided not to add one because there was no need to inject variables into server views. I could have added ejs, jade, or whatever but that would have added a dependency and the app has none at this point so I chose to keep the app dependency free instead of adding a template engine.","checked":true},{"position":5,"title":"Store the data in JSON, XML, or YAML","description":"Data is stored as a JSON object. On the root node there are two elements: touched and lists. Touched is a timestamp from when the file was last touched and lists is a object where keys are uuid-v4s and values are the respective lists. Each list has created and updated timestamps, titles, descriptions, and arrays of items. Each item has a checked state, position to sort the items, title, and descriptoin.\n<pre>\n{\n  touched: time,\n  lists: {\n    uuid: {\n        created: time\n        updated: time,\n        title: string,\n        description: string\n        items: [\n          checked: boolean,\n          postion: number,\n          title: string,\n          description: string\n        ]\n    }\n  }\n}\n</pre>","checked":true},{"position":6,"title":"Save the lists with type 4 UUIDs","description":"You can see this <a href=\"https://github.com/samuelgilman/todo/blob/master/app/model.js\" target=\"_blank\">here</a> at the bottom of the file. Inspiration came from <a href=\"http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript/2117523#2117523\" target=\"_blank\">this</a>.","checked":true},{"position":7,"title":"Include the list name","description":"List name is included.","checked":true},{"position":8,"title":"Include item names","description":"Item name is included.","checked":true},{"position":9,"title":"Include whether the item is checked","description":"Checked state is included.","checked":true},{"position":10,"title":"In lieu of a database, save the list data to the local file system","description":"You can see this <a href=\"https://github.com/samuelgilman/todo/blob/master/app/db.js\" target=\"_blank\">here</a>.","checked":true}],"created":1428280937996},"8fbb84ba-7f96-45f5-b271-f2b78da0573a":{"uuid":"8fbb84ba-7f96-45f5-b271-f2b78da0573a","updated":1428282911299,"title":"Frontend","description":"By: Sam Gilman","items":[{"position":0,"title":"Use a responsive framework like Bootstrap or Foundation","description":"I went with <a href=\"http://matthewhartman.github.io/base/\" target=\"_blank\">Base</a> which is a super simple response framework. I literally copied the css into a single file for the sake of keeping things simple. I also put everything (models, collections, views, routers, etc...) into a single file. Normally these would be broken out into individuals files and so on but it's just much easier to see everything <a href=\"https://github.com/samuelgilman/todo/blob/master/public/scripts/app.js\" target=\"_blank\">here</a>.","checked":true},{"position":1,"title":"Use a UI framework like React, Angular, Backbone, or Ember","description":"I used Backbone. The templates are  <a href=\"https://github.com/samuelgilman/todo/blob/master/app/views/index.html\" target=\"_blank\">here</a> everything else is <a href=\"https://github.com/samuelgilman/todo/blob/master/public/scripts/app.js\" target=\"_blank\">here</a>. Again, to keep things simple for the reader all templates are in one file and the entire client MVC stack is in one file except for the lib; normally these would have been decoupled.","checked":true},{"position":2,"title":"Allow users to name their list","description":"Users can name their lists.","checked":true},{"position":3,"title":"Allow users to add new list","description":"Users can create new lists.","checked":true},{"position":4,"title":"Allow users to check/uncheck list items","description":"Users can check/uncheck list items.","checked":true},{"position":5,"title":"Allow users to save their list","description":"Users can save their lists.","checked":true}],"created":1428281064960},"a0539d21-14d2-495e-8044-75d7a90837d2":{"uuid":"a0539d21-14d2-495e-8044-75d7a90837d2","updated":1428283160463,"title":"Miscellaneous","description":"By: Sam Gilman.","items":[{"position":0,"title":"Save your code on GitHub with a granular commit history","description":"Code is on <a href=\"https://github.com/samuelgilman/todo\" target=\"_blank\">Github</a>. The git log shows a granular commit history roughly accurate to how the app was built.","checked":true},{"position":1,"title":"Make sure you include a package.json file in your repo","description":"Package is included.","checked":true},{"position":2,"title":"Feel free to include tests","description":"Tests are <a href=\"https://github.com/samuelgilman/todo/blob/master/test.js\" target=\"_blank\">here</a>. Normally I would use Mocha, Phantom, or Jasmine but since this app is what it is I just built tests for the endpoints to show tests are important and most apps should have them.","checked":true},{"position":3,"title":"Exclude the list data files from source control via a pattern","description":"The database is stored in <code>./app/DATABASE</code> and is excluded. There is a file <code>./app/_DATABASE</code> which is in the source control which can be used to seed the data which you would have used to seed the data you are reading.","checked":true},{"position":4,"title":"Include a README with directions on how to create an environment file and any other  pertinent details needed to run your app locally","description":"README is included <a href=\"https://github.com/samuelgilman/todo/blob/master/README.md\" target=\"_blank\">here</a>.","checked":true},{"position":5,"title":"Feel free to streamline/improve the UI or operation of the app where you see fit","description":"I removed everything that wasn't needed from the responsive framework such as headers, footers, and menus.","checked":true},{"position":6,"title":"Retain high-level functionality as described","description":"Retained.","checked":true},{"position":7,"title":"Explain any deviations in README","description":"I added extra CRUD functionality for items along with the ability to sort items in a list.","checked":true}],"created":1428281145059}},"touched":1428336985842}